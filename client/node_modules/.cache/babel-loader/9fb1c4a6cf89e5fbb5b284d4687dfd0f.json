{"ast":null,"code":"var _jsxFileName = \"/home/aadi/project/LearningMachine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Navbar from './components/navbar/navbar';\nimport Home from './pages/Home';\nimport Courses from './pages/Courses';\nimport Login from './pages/Login';\nimport Lab from './pages/Lab';\nimport React from 'react';\nimport { useState } from 'react';\nimport { app } from './firebase-config';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n\n  const handleAction = title => {\n    const authentication = getAuth();\n\n    if (title === 'Register') {\n      createUserWithEmailAndPassword(authentication, email, password).then(response => {\n        navigate('/courses');\n        sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken);\n      }).catch(error => {\n        console.log(error.code);\n\n        if (error.code === 'auth/email-already-in-use') {\n          toast.error('Email already in use');\n        }\n\n        if (error.code === 'auth/weak-password') {\n          toast.error('Enter a stronger password');\n        }\n      });\n    }\n\n    if (title === 'Login') {\n      signInWithEmailAndPassword(authentication, email, password).then(response => {\n        navigate('/courses');\n        sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken);\n      }).catch(error => {\n        if (error.code === 'auth/wrong-password') {\n          toast.error('Please check the password');\n        }\n\n        if (error.code === 'auth/user-not-found') {\n          toast.error('Please check the email');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/courses\",\n            element: /*#__PURE__*/_jsxDEV(Courses, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              title: \"Login\",\n              setEmail: setEmail,\n              setPassword: setPassword,\n              handleAction: () => handleAction('Login')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              title: \"Register\",\n              setEmail: setEmail,\n              setPassword: setPassword,\n              handleAction: () => handleAction('Register')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/lab\",\n            element: /*#__PURE__*/_jsxDEV(Lab, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"wb55+YwN55FvN3iCdIR4mL48LrM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aadi/project/LearningMachine/src/App.js"],"names":["Routes","Route","useNavigate","Navbar","Home","Courses","Login","Lab","React","useState","app","ToastContainer","toast","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","App","email","setEmail","password","setPassword","navigate","handleAction","title","authentication","then","response","sessionStorage","setItem","_tokenResponse","refreshToken","catch","error","console","log","code"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Routes, Route, useNavigate } from 'react-router-dom'\nimport Navbar from './components/navbar/navbar';\nimport Home from './pages/Home'\nimport Courses from './pages/Courses'\nimport Login from './pages/Login'\nimport Lab from './pages/Lab'\nimport React from 'react';\nimport { useState } from 'react';\nimport { app } from './firebase-config';\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\n\n\nfunction App() {\n\tconst [email,setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tlet navigate = useNavigate();\n\tconst handleAction = (title) => {\n\t\t const authentication = getAuth();\n\t\t if(title==='Register') {\n\t\t\t  createUserWithEmailAndPassword(authentication, email, password).then((response) => {\n\t\t\t\t\tnavigate('/courses')\n\t\t\t\t\tsessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n\t\t\t  }).catch((error) => {\n\t\t\t\t  console.log(error.code)\n\t\t\t\tif(error.code === 'auth/email-already-in-use') {\n\t\t\t\t\ttoast.error('Email already in use')\n\t\t\t\t}\n\t\t\t\tif(error.code === 'auth/weak-password') {\n\t\t\t\t\ttoast.error('Enter a stronger password')\n\t\t\t\t}\n\t\t\t})\n\t\t }\n\t\t if(title==='Login') {\n\t\t\t signInWithEmailAndPassword(authentication, email, password).then((response) => {\n\t\t\t\t \tnavigate('/courses')\n\t\t\t\t \tsessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n\t\t\t }).catch((error) => {\n\t\t\t\t if(error.code === 'auth/wrong-password') {\n\t\t\t\t\t toast.error('Please check the password')\n\t\t\t\t }\n\t\t\t\t if(error.code === 'auth/user-not-found') {\n\t\t\t\t\t toast.error('Please check the email')\n\t\t\t\t }\n\t\t\t })\n\t\t }\n\t\t \n\t}\nreturn (\n  <div>\n  \t<>\n\t  <ToastContainer />\n\t  <Navbar/>\n\t  <div className=\"container mt-3\"> \n    <Routes>\n      <Route path='/' exact element={<Home/>}/>\n      <Route path='/courses'  element={<Courses/>}/>\n      \n\t\t<Route path='/login'  \n        element={\n          <Login \n            title='Login'\n\t\t\t\tsetEmail={setEmail}\n\t\t\t\tsetPassword={setPassword}\n\t\t\t\thandleAction = { () => handleAction('Login')}\n          />}\n        />\n      <Route path='/register'  \n        element={\n          <Login \n            title='Register'\n\t\t\t\tsetEmail={setEmail}\n\t\t\t\tsetPassword={setPassword}\n\t\t\t\thandleAction = { () => handleAction('Register')}\n          />}\n        />\n\t\t  <Route path='/lab' element={<Lab />} />\n      \n    </Routes>\n\t </div>\n  </>\n  \n  </div>\n);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}